import React, { useState } from 'react';

function App() {
  const [step, setStep] = useState('form');
  const [form, setForm] = useState({
    title: '',
    description: '',
    images: [],
    imagePreviews: []
  });
  const [doc, setDoc] = useState(null);

  // Handle text inputs
  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  // Handle image uploads
  const handleImageChange = (e) => {
    const files = Array.from(e.target.files);
    setForm({
      ...form,
      images: files,
      imagePreviews: files.map(file => URL.createObjectURL(file))
    });
  };

  // Simulate API call and documentation generation
  const handleSubmit = async (e) => {
    e.preventDefault();
    // Here you would make the real call to the backend
    setDoc({
      title: form.title,
      intro: 'Introduction generated by AI...',
      steps: 'Step-by-step generated by AI...',
      images: form.imagePreviews.map((src, i) => ({ src, legend: `Caption generated for image ${i + 1}` }))
    });
    setStep('view');
  };

  // Button functions (copy, export, share)
  const handleCopy = () => {
    if (doc) {
      navigator.clipboard.writeText(`${doc.title}\n${doc.intro}\n${doc.steps}`);
      alert('Text copied!');
    }
  };

  // Screen structure
  if (step === 'form') {
    return (
      <div style={{ maxWidth: 500, margin: '40px auto', padding: 24, border: '1px solid #eee', borderRadius: 8 }}>
        <h2>Create Documentation</h2>
        <form onSubmit={handleSubmit}>
          <div>
            <label>Title<br/>
              <input name="title" value={form.title} onChange={handleChange} required style={{ width: '100%' }} />
            </label>
          </div>
          <div style={{ marginTop: 12 }}>
            <label>Technical description<br/>
              <textarea name="description" value={form.description} onChange={handleChange} required rows={4} style={{ width: '100%' }} />
            </label>
          </div>
          <div style={{ marginTop: 12 }}>
            <label>Images<br/>
              <input type="file" multiple accept="image/*" onChange={handleImageChange} />
            </label>
            <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>
              {form.imagePreviews.map((src, i) => (
                <img key={i} src={src} alt={`preview ${i}`} style={{ width: 64, height: 64, objectFit: 'cover', borderRadius: 4 }} />
              ))}
            </div>
          </div>
          <button type="submit" style={{ marginTop: 20, width: '100%' }}>Generate documentation</button>
        </form>
      </div>
    );
  }

  // Documentation view screen
  if (step === 'view' && doc) {
    return (
      <div style={{ maxWidth: 600, margin: '40px auto', padding: 24, border: '1px solid #eee', borderRadius: 8 }}>
        <h2>{doc.title}</h2>
        <p><b>Introduction:</b> {doc.intro}</p>
        <p><b>How it works:</b><br />{doc.steps}</p>
        <div style={{ margin: '24px 0' }}>
          {doc.images.map((img, i) => (
            <div key={i} style={{ marginBottom: 16 }}>
              <img src={img.src} alt={`doc-img-${i}`} style={{ width: 200, borderRadius: 4 }} /><br />
              <small>{img.legend}</small>
            </div>
          ))}
        </div>
        <div style={{ display: 'flex', gap: 8 }}>
          <button onClick={handleCopy}>Copy text</button>
          <button disabled>Export PDF</button>
          <button disabled>Share</button>
          <button onClick={() => setStep('form')}>New documentation</button>
        </div>
      </div>
    );
  }

  return null;
}

export default App;
